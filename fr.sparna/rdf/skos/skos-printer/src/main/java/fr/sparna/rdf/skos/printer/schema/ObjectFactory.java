//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.26 at 10:36:31 AM CET 
//


package fr.sparna.rdf.skos.printer.schema;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the fr.sparna.rdf.skos.printer.schema package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Relation_QNAME = new QName("http://purl.org/dc/elements/1.1/", "relation");
    private final static QName _Format_QNAME = new QName("http://purl.org/dc/elements/1.1/", "format");
    private final static QName _KosDocument_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "kosDocument");
    private final static QName _Footer_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "footer");
    private final static QName _Node_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "node");
    private final static QName _Str_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "str");
    private final static QName _KosDisplay_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "kosDisplay");
    private final static QName _Att_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "att");
    private final static QName _Label_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "label");
    private final static QName _List_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "list");
    private final static QName _Language_QNAME = new QName("http://purl.org/dc/elements/1.1/", "language");
    private final static QName _Table_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "table");
    private final static QName _Identifier_QNAME = new QName("http://purl.org/dc/elements/1.1/", "identifier");
    private final static QName _Section_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "section");
    private final static QName _Header_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "header");
    private final static QName _Index_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "index");
    private final static QName _Source_QNAME = new QName("http://purl.org/dc/elements/1.1/", "source");
    private final static QName _Coverage_QNAME = new QName("http://purl.org/dc/elements/1.1/", "coverage");
    private final static QName _Rights_QNAME = new QName("http://purl.org/dc/elements/1.1/", "rights");
    private final static QName _Type_QNAME = new QName("http://purl.org/dc/elements/1.1/", "type");
    private final static QName _Date_QNAME = new QName("http://purl.org/dc/elements/1.1/", "date");
    private final static QName _Publisher_QNAME = new QName("http://purl.org/dc/elements/1.1/", "publisher");
    private final static QName _Creator_QNAME = new QName("http://purl.org/dc/elements/1.1/", "creator");
    private final static QName _KosDocumentMetadata_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "kosDocumentMetadata");
    private final static QName _Tree_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "tree");
    private final static QName _Subject_QNAME = new QName("http://purl.org/dc/elements/1.1/", "subject");
    private final static QName _ConceptBlock_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "conceptBlock");
    private final static QName _Body_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "body");
    private final static QName _LinkExternal_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "linkExternal");
    private final static QName _Title_QNAME = new QName("http://purl.org/dc/elements/1.1/", "title");
    private final static QName _NodeData_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "nodeData");
    private final static QName _Contributor_QNAME = new QName("http://purl.org/dc/elements/1.1/", "contributor");
    private final static QName _Description_QNAME = new QName("http://purl.org/dc/elements/1.1/", "description");
    private final static QName _Link_QNAME = new QName("http://www.sparna.fr/thesaurus-display", "link");
    private final static QName _Any_QNAME = new QName("http://purl.org/dc/elements/1.1/", "any");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: fr.sparna.rdf.skos.printer.schema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link NodeData }
     * 
     */
    public NodeData createNodeData() {
        return new NodeData();
    }

    /**
     * Create an instance of {@link CellType }
     * 
     */
    public CellType createCellType() {
        return new CellType();
    }

    /**
     * Create an instance of {@link KosDisplay }
     * 
     */
    public KosDisplay createKosDisplay() {
        return new KosDisplay();
    }

    /**
     * Create an instance of {@link ElementContainer }
     * 
     */
    public ElementContainer createElementContainer() {
        return new ElementContainer();
    }

    /**
     * Create an instance of {@link Tree }
     * 
     */
    public Tree createTree() {
        return new Tree();
    }

    /**
     * Create an instance of {@link Section }
     * 
     */
    public Section createSection() {
        return new Section();
    }

    /**
     * Create an instance of {@link SimpleLiteral }
     * 
     */
    public SimpleLiteral createSimpleLiteral() {
        return new SimpleLiteral();
    }

    /**
     * Create an instance of {@link Table }
     * 
     */
    public Table createTable() {
        return new Table();
    }

    /**
     * Create an instance of {@link KosDocument }
     * 
     */
    public KosDocument createKosDocument() {
        return new KosDocument();
    }

    /**
     * Create an instance of {@link ConceptBlock }
     * 
     */
    public ConceptBlock createConceptBlock() {
        return new ConceptBlock();
    }

    /**
     * Create an instance of {@link TableColumnType }
     * 
     */
    public TableColumnType createTableColumnType() {
        return new TableColumnType();
    }

    /**
     * Create an instance of {@link KosDocumentBody }
     * 
     */
    public KosDocumentBody createKosDocumentBody() {
        return new KosDocumentBody();
    }

    /**
     * Create an instance of {@link ListItem }
     * 
     */
    public ListItem createListItem() {
        return new ListItem();
    }

    /**
     * Create an instance of {@link KosDocumentHeader }
     * 
     */
    public KosDocumentHeader createKosDocumentHeader() {
        return new KosDocumentHeader();
    }

    /**
     * Create an instance of {@link KosDocumentFooter }
     * 
     */
    public KosDocumentFooter createKosDocumentFooter() {
        return new KosDocumentFooter();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link Node }
     * 
     */
    public Node createNode() {
        return new Node();
    }

    /**
     * Create an instance of {@link Index }
     * 
     */
    public Index createIndex() {
        return new Index();
    }

    /**
     * Create an instance of {@link Label }
     * 
     */
    public Label createLabel() {
        return new Label();
    }

    /**
     * Create an instance of {@link IndexEntry }
     * 
     */
    public IndexEntry createIndexEntry() {
        return new IndexEntry();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link RowType }
     * 
     */
    public RowType createRowType() {
        return new RowType();
    }

    /**
     * Create an instance of {@link StyledString }
     * 
     */
    public StyledString createStyledString() {
        return new StyledString();
    }

    /**
     * Create an instance of {@link Att }
     * 
     */
    public Att createAtt() {
        return new Att();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "relation", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createRelation(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Relation_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "format", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createFormat(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Format_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KosDocument }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "kosDocument")
    public JAXBElement<KosDocument> createKosDocument(KosDocument value) {
        return new JAXBElement<KosDocument>(_KosDocument_QNAME, KosDocument.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KosDocumentFooter }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "footer")
    public JAXBElement<KosDocumentFooter> createFooter(KosDocumentFooter value) {
        return new JAXBElement<KosDocumentFooter>(_Footer_QNAME, KosDocumentFooter.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Node }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "node")
    public JAXBElement<Node> createNode(Node value) {
        return new JAXBElement<Node>(_Node_QNAME, Node.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StyledString }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "str")
    public JAXBElement<StyledString> createStr(StyledString value) {
        return new JAXBElement<StyledString>(_Str_QNAME, StyledString.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KosDisplay }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "kosDisplay")
    public JAXBElement<KosDisplay> createKosDisplay(KosDisplay value) {
        return new JAXBElement<KosDisplay>(_KosDisplay_QNAME, KosDisplay.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Att }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "att")
    public JAXBElement<Att> createAtt(Att value) {
        return new JAXBElement<Att>(_Att_QNAME, Att.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Label }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "label")
    public JAXBElement<Label> createLabel(Label value) {
        return new JAXBElement<Label>(_Label_QNAME, Label.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link List }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "list")
    public JAXBElement<List> createList(List value) {
        return new JAXBElement<List>(_List_QNAME, List.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "language", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createLanguage(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Language_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Table }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "table")
    public JAXBElement<Table> createTable(Table value) {
        return new JAXBElement<Table>(_Table_QNAME, Table.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "identifier", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createIdentifier(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Identifier_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Section }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "section")
    public JAXBElement<Section> createSection(Section value) {
        return new JAXBElement<Section>(_Section_QNAME, Section.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KosDocumentHeader }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "header")
    public JAXBElement<KosDocumentHeader> createHeader(KosDocumentHeader value) {
        return new JAXBElement<KosDocumentHeader>(_Header_QNAME, KosDocumentHeader.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Index }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "index")
    public JAXBElement<Index> createIndex(Index value) {
        return new JAXBElement<Index>(_Index_QNAME, Index.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "source", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createSource(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Source_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "coverage", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createCoverage(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Coverage_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "rights", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createRights(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Rights_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "type", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createType(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Type_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "date", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createDate(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Date_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "publisher", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createPublisher(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Publisher_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "creator", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createCreator(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Creator_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementContainer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "kosDocumentMetadata")
    public JAXBElement<ElementContainer> createKosDocumentMetadata(ElementContainer value) {
        return new JAXBElement<ElementContainer>(_KosDocumentMetadata_QNAME, ElementContainer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Tree }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "tree")
    public JAXBElement<Tree> createTree(Tree value) {
        return new JAXBElement<Tree>(_Tree_QNAME, Tree.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "subject", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createSubject(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Subject_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptBlock }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "conceptBlock")
    public JAXBElement<ConceptBlock> createConceptBlock(ConceptBlock value) {
        return new JAXBElement<ConceptBlock>(_ConceptBlock_QNAME, ConceptBlock.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KosDocumentBody }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "body")
    public JAXBElement<KosDocumentBody> createBody(KosDocumentBody value) {
        return new JAXBElement<KosDocumentBody>(_Body_QNAME, KosDocumentBody.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Link }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "linkExternal")
    public JAXBElement<Link> createLinkExternal(Link value) {
        return new JAXBElement<Link>(_LinkExternal_QNAME, Link.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "title", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createTitle(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Title_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NodeData }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "nodeData")
    public JAXBElement<NodeData> createNodeData(NodeData value) {
        return new JAXBElement<NodeData>(_NodeData_QNAME, NodeData.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "contributor", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createContributor(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Contributor_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "description", substitutionHeadNamespace = "http://purl.org/dc/elements/1.1/", substitutionHeadName = "any")
    public JAXBElement<SimpleLiteral> createDescription(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Description_QNAME, SimpleLiteral.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Link }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.sparna.fr/thesaurus-display", name = "link")
    public JAXBElement<Link> createLink(Link value) {
        return new JAXBElement<Link>(_Link_QNAME, Link.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimpleLiteral }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://purl.org/dc/elements/1.1/", name = "any")
    public JAXBElement<SimpleLiteral> createAny(SimpleLiteral value) {
        return new JAXBElement<SimpleLiteral>(_Any_QNAME, SimpleLiteral.class, null, value);
    }

}

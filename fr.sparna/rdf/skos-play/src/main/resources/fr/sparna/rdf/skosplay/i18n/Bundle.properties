error=Error
warning=Warning
success=Sucess
next=Next
previous=Previous

menu.home=Home
menu.start=Start here
menu.about=About
menu.feedback=Feedback

home.jsp=/home-en.jsp
about.jsp=/about-en.jsp

upload.form.legend=Where is the SKOS data you want to process ?
upload.form.localFile=In a local file on my computer
upload.form.localFile.select=Select
upload.form.localFile.change=Change
upload.form.localFile.remove=Remove
upload.form.localFile.help=(Supported extensions : *.rdf, *.ttl, *.n3, *.trig, or *.zip/*.tar.gz of those. Other extensions will be interpreted as RDF/XML)
upload.form.remoteUrl=At a remote URL on the web
upload.form.remoteUrl.help=(URL of a valid SKOS file. Same file extensions are supported)
upload.form.providedExample=In one of the provided examples <a href="http://www.google.com/moderator/#15/e=209fff&t=209fff.40" target="_blank" style="font-size:0.8em;">(suggest more)</a>
upload.form.providedExample.eurovoc=EUROVOC Thesaurus (26 languages)
upload.form.providedExample.unesco=UNESCO Thesaurus
upload.form.providedExample.w=W Thesaurus (French National Archives)
upload.form.providedExample.nyt=New-York Times subject descriptors (flat list)
upload.form.endpoint=It is accessible in a SPARQL service
upload.form.endpoint.help=(service must be compatible with SPARQL 1.1, especially regarding property paths and VALUES)

upload.form.advanced.legend=Advanced options
upload.form.rdfs=Infer on subclasses and subproperties
upload.form.rdfs.help=(Only for uploaded data, or data retrieved from a URL.) Activate this option so that SKOS Play recognizes subclasses and subproperties of the SKOS \
model. The uploaded file must contain explicit rdfs:subClassOf or rdfs:subPropertyOf assertions for this to work. Look at <a href="test/test-rdfs.ttl" target="_blank">this file</a> for an example.



upload.error.noConceptsFound=No SKOS concepts were found in the data. This application only accepts SKOS data.
upload.error.dataTooLarge=\
What a large SKOS file ! \
Due to hardware limitations, SKOS Play is currently limited to 5000 concepts. \
If you need more, please contact me directly.
upload.warning.noHierarchyFound=No hierarchical information (broader or narrower) found. Hierarchical displays are disabled.

print.message.numberOfConcepts=Data processed successfully, {0} concepts were found.
print.form.legend=How do you want to render your SKOS data ?
print.form.conceptScheme.legend=Select a concept scheme
print.form.conceptScheme.noConceptSchemeFound=No concept scheme found
print.form.language.legend=Select a language
print.form.language.noLanguageFound=No language found
print.form.displayType.legend=Display type
print.form.displayType.conceptListing=Concept listing
print.form.displayType.conceptListing.help=(lists all the concepts ordered by their preferred Label in the selected language, along with all their attributes (definitions, broader concepts, narrower concepts, etc.))
print.form.displayType.alphabetical=Alphabetical index
print.form.displayType.alphabetical.help=(lists all the preferred and alternate labels in the selected language.)
print.form.displayType.alphabetical_expanded=Alphabetical index, expanded
print.form.displayType.alphabetical_expanded.help=(alphabetical index with attributes on each entry : notation, broader, narrower, related, all notes)
print.form.displayType.hierarchical=Hierarchical tree
print.form.displayType.hierarchical.help=(creates a tree representation of the concepts using the preferred label in the selected language.)
print.form.displayType.hierarchical_expanded=Hierarchical tree, expanded
print.form.displayType.hierarchical_expanded.help=(tree representation with attributs on each nodes : notation, alt labels, related, all notes)
print.form.displayType.partition=Visualisation : Partition layout
print.form.displayType.partition.help=(creates a zoomable partition layout representation of the data similar to <a href="http://mbostock.github.io/d3/talk/20111018/partition.html" target="_blank">this one</a>. Save the result with "File > save as")
print.form.displayType.treelayout=Visualisation : Tree layout
print.form.displayType.treelayout.help=(creates a collapsible treelayout representation of the data similar to <a href="http://mbostock.github.io/d3/talk/20111018/tree.html" target="_blank">this one</a>. Save the result with "File > save as")
print.form.outputFormat.legend=Output format
print.form.outputFormat.html=HTML
print.form.outputFormat.pdf=PDF (takes a while to generate)
print.form.generate=Generate !

viz.help.label=help
viz.partition.help.content=<ol><li>Click a blue rectangle to go down the tree (grey rectangles are the tree leaves and are inactive).</li><li>Click rectangle on the left side to go up the tree.</li><li>Click a label to navigate to this concept URI.</li></ol>
viz.treelayout.help.content=<ol><li>Click a blue circle to unfold the tree (white circles are the tree leaves and are inactive).</li><li>Click an open node to fold id.</li><li>Click a label to navigate to this concept URI.</li></ol>